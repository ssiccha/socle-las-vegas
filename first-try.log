gap> G := WreathProductProductAction(SymmetricGroup(5), Group((1,2)));
<permutation group of size 28800 with 5 generators>
gap> f := x -> x ^ (Order(x) / (2 - RemInt(Order(x), 2)));
function( x ) ... end
gap> randoms := List([1..50], x -> PseudoRandom(G));;
gap> randomsF := Filtered(List(randoms, f), x -> not IsOne(x));;
gap> Length(randomsF);
43
gap> commute := {x,y} -> x*y = y*x;
function( x, y ) ... end
gap> numberCommuting := x -> Length(Filtered(randomsF, y -> commute(x,y)));
function( x ) ... end
gap> collectedNumCommuting := Collected(List(randomsF, numberCommuting));
[ [ 1, 1 ], [ 2, 2 ], [ 3, 6 ], [ 4, 5 ], [ 5, 6 ], [ 6, 2 ], [ 7, 3 ], [ 8, 1 ],
  [ 9, 2 ], [ 10, 1 ], [ 11, 4 ], [ 12, 1 ], [ 13, 1 ], [ 15, 5 ], [ 16, 1 ],
  [ 17, 1 ], [ 18, 1 ] ]
gap> probablySmallTerritory := Filtered(randomsF, x -> numberCommuting(x) > 9);;
gap> Length(last);
15
gap> probablyVerySmallTerritory := Filtered(randomsF, x -> numberCommuting(x) > 14);;
gap> Socle(G);; time;
60
gap> mnsgs := MinimalNormalSubgroups(Socle(G));;
gap> Filtered(probablyVerySmallTerritory, x -> fail <> PositionProperty(mnsgs, T -> x in T));
[ (1,6)(2,7)(3,8)(4,9)(5,10)(11,16)(12,17)(13,18)(14,19)(15,20),
  (1,2)(3,4)(6,7)(8,9)(11,12)(13,14)(16,17)(18,19)(21,22)(23,24),
  (1,3)(2,4)(6,8)(7,9)(11,13)(12,14)(16,18)(17,19)(21,23)(22,24),
  (1,2)(3,4)(6,7)(8,9)(11,12)(13,14)(16,17)(18,19)(21,22)(23,24),
  (6,11)(7,12)(8,13)(9,14)(10,15)(16,21)(17,22)(18,23)(19,24)(20,25) ]
gap> Length(last);
5
gap> Filtered(probablySmallTerritory, x -> fail <> PositionProperty(mnsgs, T -> x in T));;
gap> Length(last);
10
gap> List(last2, numberCommuting);
[ 10, 17, 15, 15, 11, 15, 11, 11, 13, 16 ]
gap> inMNSG := x -> fail <> PositionProperty(mnsgs, T -> x in T);
function( x ) ... end
gap> Filtered(randomsF, inMNSG);;
gap> List(last, numberCommuting);
[ 10, 17, 15, 15, 11, 15, 11, 11, 13, 16 ]
gap> probablyVerySmallTerritory;
[ (3,5)(8,10)(13,15)(18,20)(23,25), (1,6)(2,7)(3,8)(4,9)(5,10), 
  (1,6)(2,7)(3,8)(4,9)(5,10)(11,16)(12,17)(13,18)(14,19)(15,20), 
  (1,2)(3,4)(6,7)(8,9)(11,12)(13,14)(16,17)(18,19)(21,22)(23,24), 
  (1,3)(2,4)(6,8)(7,9)(11,13)(12,14)(16,18)(17,19)(21,23)(22,24), 
  (1,2)(3,4)(6,7)(8,9)(11,12)(13,14)(16,17)(18,19)(21,22)(23,24), 
  (16,21)(17,22)(18,23)(19,24)(20,25), (6,11)(7,12)(8,13)(9,14)(10,15)(16,21)(17,
    22)(18,23)(19,24)(20,25) ]
gap> probablyVerySmallTerritory[1];
(3,5)(8,10)(13,15)(18,20)(23,25)
gap> inMNSG(last);
false
gap> PositionProperty(probablyVerySmallTerritory, inMNSG);
3
gap> 
gap> g := probablyVerySmallTerritory[3];
(1,6)(2,7)(3,8)(4,9)(5,10)(11,16)(12,17)(13,18)(14,19)(15,20)
gap> notCommutingWithg := Filtered(probablyVerySmallTerritory, x -> not commute(x,g));
[ (16,21)(17,22)(18,23)(19,24)(20,25), (6,11)(7,12)(8,13)(9,14)(10,15)(16,21)(17,
    22)(18,23)(19,24)(20,25) ]
gap> #inMNSG is not the function we want! Should we use "commutes with all but one MNSG?"
gap> probablyVerySmallTerritory[2];
(1,6)(2,7)(3,8)(4,9)(5,10)
gap> Display(probablyVerySmallTerritory);
[ ( 3, 5)( 8,10)(13,15)(18,20)(23,25), ( 1, 6)( 2, 7)( 3, 8)( 4, 9)( 5,10), 
  ( 1, 6)( 2, 7)( 3, 8)( 4, 9)( 5,10)(11,16)(12,17)(13,18)(14,19)(15,20), 
  ( 1, 2)( 3, 4)( 6, 7)( 8, 9)(11,12)(13,14)(16,17)(18,19)(21,22)(23,24), 
  ( 1, 3)( 2, 4)( 6, 8)( 7, 9)(11,13)(12,14)(16,18)(17,19)(21,23)(22,24), 
  ( 1, 2)( 3, 4)( 6, 7)( 8, 9)(11,12)(13,14)(16,17)(18,19)(21,22)(23,24), 
  (16,21)(17,22)(18,23)(19,24)(20,25), ( 6,11)( 7,12)( 8,13)( 9,14)(10,15)(16,21)
    (17,22)(18,23)(19,24)(20,25) ]
gap> Group(Concatenation([g], notCommutingWithg);
Syntax error: ) expected
Group(Concatenation([g], notCommutingWithg);
                                           ^
gap> Group(Concatenation([g], notCommutingWithg));
Group([ (1,6)(2,7)(3,8)(4,9)(5,10)(11,16)(12,17)(13,18)(14,19)(15,20), (16,21)
(17,22)(18,23)(19,24)(20,25), (6,11)(7,12)(8,13)(9,14)(10,15)(16,21)(17,22)(18,23)
(19,24)(20,25) ])
gap> Size(last);
120
gap> OrbitsDomain(last2, [1..25]);
[ [ 1, 6, 11, 16, 21 ], [ 2, 7, 12, 17, 22 ], [ 3, 8, 13, 18, 23 ], 
  [ 4, 9, 14, 19, 24 ], [ 5, 10, 15, 20, 25 ] ]
gap> possibleSocleFactor := Group(Concatenation([g], notCommutingWithg));
Group([ (1,6)(2,7)(3,8)(4,9)(5,10)(11,16)(12,17)(13,18)(14,19)(15,20), (16,21)
(17,22)(18,23)(19,24)(20,25), (6,11)(7,12)(8,13)(9,14)(10,15)(16,21)(17,22)(18,23)
(19,24)(20,25) ])
gap> G.1;
(1,2,3,4,5)(6,7,8,9,10)(11,12,13,14,15)(16,17,18,19,20)(21,22,23,24,25)
gap> G.2;
(1,6,11,16,21)(2,7,12,17,22)(3,8,13,18,23)(4,9,14,19,24)(5,10,15,20,25)
gap> G.3;
(1,2)(6,7)(11,12)(16,17)(21,22)
gap> G.4;
(1,6)(2,7)(3,8)(4,9)(5,10)
gap> G.5;
(2,6)(3,11)(4,16)(5,21)(8,12)(9,17)(10,22)(14,18)(15,23)(20,24)
gap> Group(Concatenation([G.5, g], notCommutingWithg));
<permutation group with 4 generators>
gap> OrbitsDomain(last, [1..25]);
[ [ 1, 6, 2, 11, 7, 3, 16, 12, 8, 4, 21, 17, 13, 9, 5, 22, 18, 14, 10, 23, 19, 
      15, 24, 20, 25 ] ]
gap> LogTo();
